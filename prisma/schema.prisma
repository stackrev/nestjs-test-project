// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  first_name String   @db.VarChar(255)
  last_name  String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(120)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  feeds     Feed[]
  comments  Comment[]
  likes     Like[]
  favorites Favorite[]

  @@map("users")
}

// users 1 ---> * feeds 
// users 1 ---> * comments 

model Feed {
  id          Int      @id @default(autoincrement())
  user_id     Int
  user        User     @relation(fields: [user_id], references: [id])
  title       String   @db.VarChar(255)
  description String   @db.Text
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  comments  Comment[]
  likes     Like[]
  favorites Favorite[]

  @@map("feeds")
}

// feeds 1 ---> * comments 

model Comment {
  id           Int      @id @default(autoincrement())
  user_id      Int
  user         User     @relation(fields: [user_id], references: [id])
  feed_id      Int
  feed         Feed     @relation(fields: [feed_id], references: [id])
  text         String   @db.Text
  is_confirmed Boolean  @default(false) @db.TinyInt
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt

  @@map("comments")
}

model Like {
  id      Int  @id @default(autoincrement())
  user_id Int
  user    User @relation(fields: [user_id], references: [id])
  feed_id Int
  feed    Feed @relation(fields: [feed_id], references: [id])

  @@map("likes")
}

model Favorite {
  id      Int  @id @default(autoincrement())
  user_id Int
  user    User @relation(fields: [user_id], references: [id])
  feed_id Int
  feed    Feed @relation(fields: [feed_id], references: [id])

  @@map("favorites")
}
